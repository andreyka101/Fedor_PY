
# нужная ссылка
# https://pythonworld.ru/moduli/modul-array-massivy-v-python.html


from array import array

# создаём массив
# array(r , s)
# r - режим массива (размер каждой ячейки в массиве , таблица в ссылке)
# s - список (можно не писать)
arr = array("b" , [100,2,3])
# print(arr)
# print(arr[0])
# print(type(arr))



# массив с плавающей точкой
# arr_2 = array("f" , [100.333,2,3])
# print(arr_2)
# print(arr_2[0])
# print(type(arr_2))



#ANCHOR - у массива есть методы списков:
# arr.append(x)# - добавление элемента в конец массива.
# arr.count(х) - возвращает количество вхождений х в массив.
# arr.index(х) - номер первого вхождения x в массив.
# arr.insert(n, х) - включить новый пункт со значением х в массиве перед номером n. Отрицательные значения рассматриваются относительно конца массива.
# arr.pop(i) - удаляет i-ый элемент из массива и возвращает его. По умолчанию удаляется последний элемент.
# arr.remove(х) - удалить первое вхождение х из массива.
# arr.reverse() - обратный порядок элементов в массиве.




# возвращает режим массива (символ при создании массива)
# print(arr.typecode)



# размер в байтах каждого элемента в массиве
# print(arr.itemsize)



# кортеж (ячейка памяти, длина масива). Полезно для низкоуровневых операций.
# print(arr.buffer_info())



# на уроке расскажу
with open("i_file.txt" , "br") as file_open:
    arr.fromfile(file_open , 1)
    print(arr)










#FIXME - на уроке расскажу
# array.byteswap()
# array.frombytes(b) - делает массив array из массива байт. Количество байт должно быть кратно размеру одного элемента в массиве.
# arr.extend(iter) - добавление элементов из объекта в массив.